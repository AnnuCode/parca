name: UI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2.1.7
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install project dependencies
        run: yarn --prefer-offline
        working-directory: ui

      - run: yarn test
        working-directory: ui

      - name: Install ESLint
        working-directory: ui
        run: npm i eslint

      - name: Run ESLint
        working-directory: ui
        run: npm run lint
        continue-on-error: true

  publish-ui-components:
    name: Publish UI components to NPM
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Pull all tags for Lerna semantic release
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Ensure access
        working-directory: ui
        run: |
          npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
        env:
          NPM_TOKEN: ${{ secrets.NPMTOKEN }}

      - name: Config git user
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Bootstrap lerna
        working-directory: ui
        run: yarn bootstrap

      - name: Bump versions and publish packages
        working-directory: ui
        run: yarn publish:ci
