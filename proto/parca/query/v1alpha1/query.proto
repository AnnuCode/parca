syntax = "proto3";

package parca.query.v1alpha1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "parca/profilestore/v1alpha1/profilestore.proto";

service QueryService {
    rpc QueryRange(QueryRangeRequest) returns (QueryRangeResponse) {
        option (google.api.http) = {
            get: "/profiles/query_range"
        };
    }

    rpc Query(QueryRequest) returns (QueryResponse) {
        option (google.api.http) = {
            get: "/profiles/query"
        };
    }

    rpc Series(SeriesRequest) returns (SeriesResponse) {
        option (google.api.http) = {
            get: "/profiles/series"
        };
    }

    rpc Labels(LabelsRequest) returns (LabelsResponse) {
        option (google.api.http) = {
            get: "/profiles/labels"
        };
    }

    rpc Values(ValuesRequest) returns (ValuesResponse) {
        option (google.api.http) = {
            get: "/profiles/labels/{label_name}/values"
        };
    }
}

message QueryRangeRequest{
    string query = 1;

    google.protobuf.Timestamp start = 2;
    google.protobuf.Timestamp end   = 3;
    uint32 limit                    = 4;
}

message QueryRangeResponse{
    repeated MetricsSeries series = 1;
}

message MetricsSeries {
    parca.profilestore.v1alpha1.LabelSet labelset = 1;
    repeated MetricsSample samples = 2;
}

message MetricsSample {
    google.protobuf.Timestamp timestamp = 1;
    int64 value = 2;
}

message MergeProfile {
    string query = 1;

    google.protobuf.Timestamp start = 2;
    google.protobuf.Timestamp end   = 3;
}

message SingleProfile {
    google.protobuf.Timestamp time  = 1;

    string query = 2;
}

message DiffProfile {
    ProfileDiffSelection a = 1;
    ProfileDiffSelection b = 2;
}

message ProfileDiffSelection {
    enum Mode {
        MODE_SINGLE_UNSPECIFIED = 0;
        MODE_MERGE  = 1;
    }

    Mode mode = 1;

    oneof options {
        MergeProfile  merge  = 2;
        SingleProfile single = 3;
    }
}

message QueryRequest{
    enum Mode {
        MODE_SINGLE_UNSPECIFIED = 0;
        MODE_DIFF   = 1;
        MODE_MERGE  = 2;
    }

    Mode mode = 1;

    oneof options {
        DiffProfile   diff   = 2;
        MergeProfile  merge  = 3;
        SingleProfile single = 4;
    }

    enum ReportType {
        REPORT_TYPE_FLAMEGRAPH_UNSPECIFIED = 0;
    }

    ReportType report_type = 5;
}

message Flamegraph {
    FlamegraphRootNode root = 1;
    int64 total = 2;
    string unit = 3;
    int32 height = 4;
}

message FlamegraphRootNode {
    int64 cumulative = 1;
    int64 diff = 2;
    repeated FlamegraphNode children = 3;
}

message FlamegraphNode {
    FlamegraphNodeMeta meta = 1;
    int64 cumulative = 2;
    int64 diff = 3;
    repeated FlamegraphNode children = 4;
}

message FlamegraphNodeMeta {
    Location location = 1;
    Mapping mapping = 2;
    Function function = 3;
    Line line = 4;
}

message Location {
    uint64 id = 1;
    uint64 mapping_id = 2;
    uint64 address = 3;
    bool is_folded = 4;
}

message Line {
    uint64 location_id = 1;
    uint64 function_id = 2;
    int64 line = 3;
}

message Mapping {
    uint64 id = 1;
    uint64 start = 2;
    uint64 limit = 3;
    uint64 offset = 4;
    string file = 5;
    string build_id = 6;
}

message Function {
    uint64 id = 1;
    string name = 2;
    string system_name = 3;
    string filename = 4;
    int64 start_line = 5;
}

message QueryResponse{
    oneof report {
        Flamegraph flamegraph = 5;
    }
}

message SeriesRequest{
    repeated string match           = 1;
    google.protobuf.Timestamp start = 2;
    google.protobuf.Timestamp end   = 3;
}
message SeriesResponse{}

message LabelsRequest{
    repeated string match           = 1;
    google.protobuf.Timestamp start = 2;
    google.protobuf.Timestamp end   = 3;
}
message LabelsResponse{
    repeated string label_names = 1;
    repeated string warnings    = 2;
}

message ValuesRequest{
    string                    label_name = 1;
    repeated string           match      = 2;
    google.protobuf.Timestamp start      = 3;
    google.protobuf.Timestamp end        = 4;
}
message ValuesResponse{
    repeated string label_values = 1;
    repeated string warnings     = 2;
}
