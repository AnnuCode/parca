// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package profilestorev1alpha1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ProfileStoreServiceClient is the client API for ProfileStoreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ProfileStoreServiceClient interface {
	// WriteRaw accepts a raw set of bytes of a pprof file
	WriteRaw(ctx context.Context, in *WriteRawRequest, opts ...grpc.CallOption) (*WriteRawResponse, error)
}

type profileStoreServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProfileStoreServiceClient(cc grpc.ClientConnInterface) ProfileStoreServiceClient {
	return &profileStoreServiceClient{cc}
}

func (c *profileStoreServiceClient) WriteRaw(ctx context.Context, in *WriteRawRequest, opts ...grpc.CallOption) (*WriteRawResponse, error) {
	out := new(WriteRawResponse)
	err := c.cc.Invoke(ctx, "/parca.profilestore.v1alpha1.ProfileStoreService/WriteRaw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProfileStoreServiceServer is the server API for ProfileStoreService service.
// All implementations should embed UnimplementedProfileStoreServiceServer
// for forward compatibility
type ProfileStoreServiceServer interface {
	// WriteRaw accepts a raw set of bytes of a pprof file
	WriteRaw(context.Context, *WriteRawRequest) (*WriteRawResponse, error)
}

// UnimplementedProfileStoreServiceServer should be embedded to have forward compatible implementations.
type UnimplementedProfileStoreServiceServer struct {
}

func (UnimplementedProfileStoreServiceServer) WriteRaw(context.Context, *WriteRawRequest) (*WriteRawResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteRaw not implemented")
}

// UnsafeProfileStoreServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ProfileStoreServiceServer will
// result in compilation errors.
type UnsafeProfileStoreServiceServer interface {
	mustEmbedUnimplementedProfileStoreServiceServer()
}

func RegisterProfileStoreServiceServer(s grpc.ServiceRegistrar, srv ProfileStoreServiceServer) {
	s.RegisterService(&ProfileStoreService_ServiceDesc, srv)
}

func _ProfileStoreService_WriteRaw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRawRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileStoreServiceServer).WriteRaw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parca.profilestore.v1alpha1.ProfileStoreService/WriteRaw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileStoreServiceServer).WriteRaw(ctx, req.(*WriteRawRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ProfileStoreService_ServiceDesc is the grpc.ServiceDesc for ProfileStoreService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ProfileStoreService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "parca.profilestore.v1alpha1.ProfileStoreService",
	HandlerType: (*ProfileStoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WriteRaw",
			Handler:    _ProfileStoreService_WriteRaw_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "parca/profilestore/v1alpha1/profilestore.proto",
}
