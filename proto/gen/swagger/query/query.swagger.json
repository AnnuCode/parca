{
  "swagger": "2.0",
  "info": {
    "title": "query/query.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Query"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/profiles/labels": {
      "get": {
        "operationId": "Query_Labels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/queryLabelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "match",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/profiles/labels/{labelName}/values": {
      "get": {
        "operationId": "Query_Values",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/queryValuesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "labelName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "match",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/profiles/query": {
      "get": {
        "operationId": "Query_Query",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/queryQueryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SINGLE",
              "DIFF",
              "MERGE"
            ],
            "default": "SINGLE"
          },
          {
            "name": "diff.a.mode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SINGLE",
              "MERGE"
            ],
            "default": "SINGLE"
          },
          {
            "name": "diff.a.merge.query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "diff.a.merge.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "diff.a.merge.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "diff.a.single.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "diff.a.single.query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "diff.b.mode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SINGLE",
              "MERGE"
            ],
            "default": "SINGLE"
          },
          {
            "name": "diff.b.merge.query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "diff.b.merge.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "diff.b.merge.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "diff.b.single.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "diff.b.single.query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "merge.query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "merge.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "merge.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "single.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "single.query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "reportType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "FLAMEGRAPH"
            ],
            "default": "FLAMEGRAPH"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/profiles/query_range": {
      "get": {
        "operationId": "Query_QueryRange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/queryQueryRangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/profiles/series": {
      "get": {
        "operationId": "Query_Series",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/querySeriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "match",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "QueryRequestReportType": {
      "type": "string",
      "enum": [
        "FLAMEGRAPH"
      ],
      "default": "FLAMEGRAPH"
    },
    "parcaprofilestoreLabel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "profilestoreLabelSet": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parcaprofilestoreLabel"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "queryDiffProfile": {
      "type": "object",
      "properties": {
        "a": {
          "$ref": "#/definitions/queryProfileDiffSelection"
        },
        "b": {
          "$ref": "#/definitions/queryProfileDiffSelection"
        }
      }
    },
    "queryFlamegraph": {
      "type": "object",
      "properties": {
        "root": {
          "$ref": "#/definitions/queryFlamegraphNode"
        },
        "total": {
          "type": "string",
          "format": "int64"
        },
        "unit": {
          "type": "string"
        }
      }
    },
    "queryFlamegraphNode": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "cumulative": {
          "type": "string",
          "format": "int64"
        },
        "diff": {
          "type": "string",
          "format": "int64"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/queryFlamegraphNode"
          }
        }
      }
    },
    "queryLabelsResponse": {
      "type": "object",
      "properties": {
        "labelNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "queryMergeProfile": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "queryMetricsSample": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "queryMetricsSeries": {
      "type": "object",
      "properties": {
        "labelset": {
          "$ref": "#/definitions/profilestoreLabelSet"
        },
        "samples": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/queryMetricsSample"
          }
        }
      }
    },
    "queryProfileDiffSelection": {
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/queryProfileDiffSelectionMode"
        },
        "merge": {
          "$ref": "#/definitions/queryMergeProfile"
        },
        "single": {
          "$ref": "#/definitions/querySingleProfile"
        }
      }
    },
    "queryProfileDiffSelectionMode": {
      "type": "string",
      "enum": [
        "SINGLE",
        "MERGE"
      ],
      "default": "SINGLE"
    },
    "queryQueryRangeResponse": {
      "type": "object",
      "properties": {
        "series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/queryMetricsSeries"
          }
        }
      }
    },
    "queryQueryRequestMode": {
      "type": "string",
      "enum": [
        "SINGLE",
        "DIFF",
        "MERGE"
      ],
      "default": "SINGLE"
    },
    "queryQueryResponse": {
      "type": "object",
      "properties": {
        "flamegraph": {
          "$ref": "#/definitions/queryFlamegraph"
        }
      }
    },
    "querySeriesResponse": {
      "type": "object"
    },
    "querySingleProfile": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "query": {
          "type": "string"
        }
      }
    },
    "queryValuesResponse": {
      "type": "object",
      "properties": {
        "labelValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
